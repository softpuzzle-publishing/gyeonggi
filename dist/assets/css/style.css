[class^=img-]{vertical-align:top}[class^=icon-]{display:inline-block;background-size:contain;background-repeat:no-repeat;background-position:0 0;font-style:normal;line-height:1;width:24px;height:24px}[class^=icon-arrow-]{width:16px;height:16px}[class^=icon-float-]{width:50px;height:50px;box-shadow:2px 2px 6px rgba(0,0,0,.1);border-radius:50%}.icon-back{background-image:url(../images/icon-back.svg)}.icon-setting{background-image:url(../images/icon-setting.svg)}.icon-print{background-image:url(../images/icon-print.svg)}.icon-card{background-image:url(../images/icon-card.svg)}.icon-wallet{background-image:url(../images/icon-wallet.svg)}.icon-alram{background-image:url(../images/icon-alram.svg)}.icon-new{background-image:url(../images/icon-new.svg)}.icon-id{background-image:url(../images/icon-id.svg)}.icon-statistics{background-image:url(../images/icon-statistics.svg)}.icon-home{background-image:url(../images/icon-home.svg)}.icon-list{background-image:url(../images/icon-list.svg)}.icon-paper{background-image:url(../images/icon-paper.svg)}.icon-lock{background-image:url(../images/icon-lock.svg)}.icon-find{background-image:url(../images/icon-find.svg)}.icon-share{background-image:url(../images/icon-share.svg)}.icon-trash{background-image:url(../images/icon-trash.svg)}.icon-my{background-image:url(../images/icon-my.svg)}.icon-warn{background-image:url(../images/icon-warn.svg)}.icon-modal-close{background-image:url(../images/icon-modal-close.svg)}.icon-domin-card{background-image:url(../images/icon-domin-card.svg)}.icon-domin-point{background-image:url(../images/icon-domin-point.svg)}.icon-arrow-right{background-image:url(../images/icon-arrow-right.svg)}.icon-arrow-left{background-image:url(../images/icon-arrow-left.svg)}.icon-arrow-top{background-image:url(../images/icon-arrow-top.svg)}.icon-arrow-down{background-image:url(../images/icon-arrow-down.svg)}.icon-arrow-home-right{background-image:url(../images/icon-arrow-home-right.svg)}.icon-arrow-home-right-white{background-image:url(../images/icon-arrow-home-right-white.svg)}.icon-popover{width:16px;height:16px;background-image:url(../images/icon-popover.svg)}.icon-float-setting{background:#fff url(../images/icon-float-setting.svg)}.icon-float-wallet{background:#fff url(../images/icon-float-wallet.svg)}.icon-float-mydata{background:#fff url(../images/icon-float-mydata.svg)}.icon-float-card{background:#fff url(../images/icon-float-card.svg)}.icon-float-alram{background:#fff url(../images/icon-float-alram.svg)}.icon-float-benefit{background:#fff url(../images/icon-float-benefit.svg)}.icon-float-home{background:#0051a3 url(../images/icon-float-home.svg)}.icon-float-close{background:#807f7f url(../images/icon-float-close.svg)}.icon-float-menu{background:#fff url(../images/icon-float-menu.svg)}.icon-close-circle{background-image:url(../images/icon-close-circle.svg);width:28px;height:28px}*:focus{outline:0}[class^=row]{align-items:stretch}[class^=col-]{min-height:100%;height:100%}body{-webkit-font-smoothing:antialiased;letter-spacing:-0.01em;word-break:break-all;background-color:#fff}legend{overflow:hidden;position:absolute;width:0;height:0;line-height:0;text-indent:-9999px}ol,ul,dl,li{list-style:none;margin:0;padding:0}h1,h2,h3,h4,h5,h6,.h1,.h2,.h3,.h4,.h5,.h6,p{margin:0;padding:0}*{margin:0;padding:0}i,em{font-style:normal}pre{white-space:pre-wrap}.height-60px{height:60px}.noto-b-30{font-size:30px;font-weight:700;line-height:34px}.noto-b-24{font-size:24px;font-weight:700;line-height:34px}.noto-m-24{font-size:24px;font-weight:500;line-height:34px}.noto-b-20{font-size:20px;font-weight:700;line-height:30px}.noto-m-20{font-size:20px;font-weight:500;line-height:30px}.noto-b-18{font-size:18px;font-weight:700;line-height:24px}.noto-m-18{font-size:18px;font-weight:500;line-height:24px}.noto-b-16{font-size:16px;font-weight:700;line-height:22px}.noto-m-16{font-size:16px;font-weight:500;line-height:22px}.noto-r-16{font-size:16px;font-weight:400;line-height:22px}.noto-b-14{font-size:14px;font-weight:700;line-height:24px}.noto-m-14{font-size:14px;font-weight:500;line-height:24px}.noto-r-14{font-size:14px;font-weight:400;line-height:24px}.noto-r-12{font-size:12px;font-weight:400;line-height:18px}.font-size-24px{font-size:24px}.font-size-20px{font-size:20px}.font-size-18px{font-size:18px}.font-size-16px{font-size:16px}.font-size-14px{font-size:14px}.font-size-12px{font-size:12px}.line-height-normal{line-height:normal}.text-underline{text-decoration:underline}img{max-width:100%}.min-width-150px{min-width:500px}.btn{text-decoration:none !important;transition:none;border-radius:0}.btn.btn-sm{font-size:14px;font-weight:400;line-height:24px;height:36px;line-height:27px}.btn.btn-md{font-size:14px;font-weight:500;line-height:24px;height:42px;line-height:23px}.btn.btn-lg{font-size:18px;font-weight:500;line-height:24px;height:56px}.btn.btn-text-box{border-radius:8px;box-shadow:2px 2px 6px rgba(0,0,0,.1);background:#fff}.btn.round-btn{border-radius:18px}.fixed-btn-container{position:fixed;bottom:0;left:0;width:100%;z-index:2}.card{border-radius:8px;box-shadow:2px 2px 6px rgba(0,0,0,.1);border:0;flex-direction:initial}.main .card{padding:30px 10px 30px 9px}.card-banner-container .card{padding:24px 20px;box-shadow:3px 3px 6px rgba(0,0,0,.1)}.card-detail-container .card{padding:16px}.container{max-width:750px;padding:0 16px}.popover{font-size:14px;font-weight:400;line-height:24px;background:rgba(1,1,1,.8);color:#fff;border:0;border-radius:8px;max-width:294px;z-index:1031}.popover .arrow{background:transparent}.popover .arrow::after{border-top-color:rgba(1,1,1,.8);border-bottom-color:rgba(1,1,1,.8)}.popover .arrow::before{border-top-color:transparent}.popover-toggler{font-size:0;display:inline-block;width:16px;height:16px}.popover-toggler i{vertical-align:top}.popover-body{word-break:keep-all;color:#fff;padding:13px 20px;width:294px}.modal.show{padding:0 !important}.modal .modal-dialog{padding:0 38px}.modal .modal-content{border:0;overflow:hidden;border-radius:8px;box-shadow:2px 2px 6px rgba(0,0,0,.1);text-align:center}.modal .modal-header{overflow:visible;border-top-left-radius:8px;border-top-right-radius:8px;padding:13px;justify-content:center;position:relative;width:100%;border-bottom:1px solid #b4b4b4}.modal .modal-header .close{position:absolute;left:16px;top:50%;transform:translateY(-50%);width:24px;height:24px;padding:0;margin:0}.modal .modal-header .modal-title{font-size:20px;font-weight:700;line-height:30px}.modal .modal-body{padding:30px 20px;word-break:keep-all}.modal .modal-footer{flex-wrap:nowrap;justify-content:center;padding:0;border:0;border-bottom-right-radius:8px;border-bottom-left-radius:8px}.modal .modal-footer *{margin:0}.modal .modal-footer button{font-size:16px;font-weight:500;line-height:22px;width:100%;height:60px;line-height:30px}.modal.slideup-modal{padding:0}.modal.slideup-modal.show .modal-content{bottom:0}.modal.slideup-modal .modal-dialog{padding:0;margin:0 auto;height:100%}.modal.slideup-modal .modal-content{border:0;position:absolute;border-radius:0;bottom:-100%;max-height:80vh;overflow:visible;height:auto;transition:bottom .35s ease-out;border-top-left-radius:8px;border-top-right-radius:8px}.modal.slideup-modal .modal-body{padding:16px 16px 20px 16px}.modal.slideup-modal.style2 .modal-content{border-top-left-radius:30px;border-top-right-radius:30px}.modal.slideup-modal.style2 .modal-content .modal-header{border:0;border-top-left-radius:30px;border-top-right-radius:30px;padding:0}.modal.slideup-modal.style2 .modal-content .modal-header .close{right:16px;top:-50px;transform:none;width:28px;height:28px;opacity:1;left:auto}.modal.slideup-modal.style2 .modal-body{padding:46px 36px 93px 36px}.page-title{font-size:18px;font-weight:700;line-height:24px;padding:8px 0;background:#fff}.seperator{width:100%;height:16px;background:#ddd;border:0}.options li a{font-size:18px;font-weight:500;line-height:24px;width:100%;display:block;text-align:center;padding:12px 0;color:#b4b4b4}.options li+li{margin-top:4px}.options li.selected{border-radius:8px;background:#f2f2f2}.options li.selected a{color:#010101}.form-control{font-size:20px;font-weight:500;line-height:30px;padding:11px 10px}.form-control::placeholder{font-size:20px;font-weight:500;line-height:30px;color:#b4b4b4}.form-group{margin-bottom:30px}.form-group label{font-size:16px;font-weight:500;line-height:22px;margin-left:10px;margin-bottom:10px;color:#807f7f}.form-control:disabled,.form-control[readonly]:focus,.form-control:disabled,.form-control[readonly]{background-color:transparent;border:1px solid #ddd;opacity:1;color:#b4b4b4}.custom-checkbox .custom-control-label{font-size:16px;font-weight:500;line-height:22px;color:#807f7f}.custom-checkbox .custom-control-label::before{border-radius:0;border-color:#ddd}.custom-checkbox .custom-control-input:checked~.custom-control-label::after{background-color:#2a76dc}html,body{width:100%;height:100%}body{position:relative;padding-top:60px;transition:padding-top .4s .02s;color:#010101}html.is-opened-floatMenu{overflow:hidden}html.is-opened-floatMenu::after{content:"";background:rgba(1,1,1,.5);width:100vw;height:100vh;z-index:1038;position:fixed;left:0;top:0}#skip-navi{position:fixed;left:0;top:-999px;display:block;padding:10px 20px;font-size:16px;color:#000;background:#f55454}#skip-navi:focus{top:0;z-index:999}#wrap{position:relative;min-height:100%;display:flex;flex-direction:column}#container-block{flex-grow:1}#content{padding-bottom:56px}header{height:60px;background:#fff}.app-bar{display:flex;align-items:center;justify-content:center;width:100%;height:60px;position:relative;background:#fff;position:fixed;left:0;top:0;z-index:1037;width:100%;transition:.4s .02s}.app-bar a{position:absolute;width:24px;height:24px;left:16px;top:50%;transform:translateY(-50%)}.app-bar p{font-size:20px;font-weight:700;line-height:30px}.floating-menu{display:flex;flex-direction:column-reverse;position:fixed;right:16px;bottom:20px;z-index:1039}.floating-menu li:not(.float-menu){display:none}.floating-menu li+li{margin-bottom:14px}.floating-menu a{width:50px;height:50px;padding:1px;display:block}.floating-menu .icon-float-close{display:none}.floating-menu.opened li{display:block}.floating-menu.opened .icon-float-menu{display:none}.floating-menu.opened .icon-float-close{display:block}#main{padding-top:60px}#main header{position:fixed;width:100%;top:0;left:0;z-index:2}.donut-chart{position:relative;border-radius:50%;transform:rotate(180deg);width:96px;height:96px;background-color:#ddd;margin:auto}.donut-chart:before,.donut-chart:after{position:absolute;left:50%;top:50%;transform:translate(-50%, -50%)}.donut-chart:before{border-radius:50%;background:#fff;width:74px;height:74px;content:""}.donut-chart:after{font-size:16px;font-weight:700;line-height:22px;color:#010101;z-index:1;transform:rotate(180deg) translate(50%, 50%)}.donut-chart.active::after{content:attr(data-after)}.thumb-welfare{display:flex;flex:1 1 33.33%}.thumb-welfare>div{width:100%}.thumb-welfare>div .welfare-container{height:96px;border-left:1px solid #ddd;display:flex;align-items:center;justify-content:center}.thumb-welfare>div>p{font-size:16px;font-weight:400;line-height:22px;text-align:center;margin-top:8px}.main-alram{position:relative;height:60px;display:flex;align-items:center}.main-alram .new{position:absolute;top:0;right:0;display:block;width:6px;height:6px;border-radius:50%;background-color:#ed2c2c}.popover-container{background:#f2f2f2;border-radius:8px;padding:8px 16px;display:flex;align-items:center;justify-content:space-between;margin-top:73px}.popover-container .btn{border-radius:8px}.advertise-badge{font-size:12px;font-weight:400;line-height:18px;padding:0 6px;border-radius:8px;border:1px solid #807f7f;width:fit-content;margin-bottom:8px;background:#fff}.card-banner-container .swiper-slide{width:100%;overflow:hidden;display:block;position:relative}.card-banner-container .swiper-slide a{padding:20px 20px 23px 20px;width:100%;padding-bottom:31.432%;height:0;display:block;overflow:hidden}.card-banner-container .swiper-slide a img{position:absolute;left:0;top:0;z-index:-1;width:100%;height:100%;object-fit:cover;object-position:center center}.card-banner-container .swiper-pagination{font-size:12px;font-weight:400;line-height:18px;top:20px;right:26px;color:#494949;width:auto;bottom:auto;left:auto}.domin-card-container{position:relative;width:calc(100% - 40px);height:0;padding-bottom:140.2439%;margin:0 auto}.domin-card-container .domin-card{background:url(../images/img-card-background.svg);display:block;width:100%;height:100%;padding:34px 20px;position:absolute;bottom:0;left:0;z-index:2;margin:0 auto;transform:translateY(54px) translateX(0);transform-origin:center;transition:transform .4s cubic-bezier(0.8, 0.2, 0.1, 0.8) .2s,background .4s linear,width .4s .2s,left .4s .2s}.domin-card-container .domin-card.card--next{z-index:5;transform:translateY(0) translateX(0)}.domin-card-container .domin-card.card--out{animation:card-out .6s cubic-bezier(0.8, 0.2, 0.1, 0.8);transform:translateY(54px) translateX(0);z-index:1}.domin-card-container .domin-card.card--out .qr-btn{opacity:0}.domin-card-container .domin-card.card--current{width:calc(100% + 40px);cursor:auto;user-select:auto;z-index:10;left:-20px;opacity:1;transform:translateX(0%)}.domin-card-container .domin-card.card--current .switch-btn{opacity:0}.domin-card-container .domin-card.card--current .qr-btn{opacity:1}.domin-card-container .switch-btn{font-size:16px;font-weight:500;line-height:22px;color:#fff;border-radius:0;outline:0;padding:0;margin:0;border:0;width:auto;height:30px;transition:opacity .1s .4s;background-color:transparent;display:flex;align-items:center;justify-content:center;width:100%;position:absolute;left:0;bottom:13px;display:none}.domin-card-container .switch-btn p{width:80px;text-align:center;color:#fff}.domin-card-container .round-btn{font-size:12px;font-weight:400;line-height:18px;height:32px;line-height:14px}.domin-card-container .qr-btn{width:60px;height:60px;outline:0;border:0;position:absolute;bottom:36px;left:28px;transition:opacity .1s .05s;background:transparent;opacity:0;padding:0}.domin-card-container .qr-btn img{width:60px;height:60px}@keyframes card-out{0%{z-index:20;transform:translateY(0px);left:-20px;width:calc(100% + 40px)}50%{transform:translateY(-110%) translateX(0)}80%{z-index:1}100%{transform:translateY(54px) translateX(0)}}.personal-list{padding:20px 27px}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
